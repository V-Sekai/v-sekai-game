name: Build Godot
description: Build Godot with the provided options.
inputs:
  target:
    description: Build target (editor, template_release, template_debug).
    default: "editor"
  tests:
    description: Unit tests.
    default: false
  platform:
    description: Target platform.
    required: false
  scons-env:
    default: ""
  sconsflags:
    default: ""
  scons-cache:
    description: The scons cache path.
    default: "${{ github.workspace }}/.scons-cache/"
  scons-cache-limit:
    description: The scons cache size limit.
    # actions/cache has 10 GiB limit, and GitHub runners have a 14 GiB disk.
    # Limit to 7 GiB to avoid having the extracted cache fill the disk.
    default: 7168
runs:
  using: "composite"
  steps:
    - name: Install llvm-mingw
      shell: bash
      run: |
        curl -LO https://github.com/mstorsjo/llvm-mingw/releases/download/20230130/llvm-mingw-20230130-ucrt-ubuntu-18.04-x86_64.tar.xz
        tar -xf llvm-mingw-20230130-ucrt-ubuntu-18.04-x86_64.tar.xz
        mv llvm-mingw-20230130-ucrt-ubuntu-18.04-x86_64 llvm-mingw
      
    - name: Scons Build
      shell: sh
      env:
          SCONSFLAGS: ${{ inputs.sconsflags }}
          SCONS_CACHE: ${{ inputs.scons-cache }}
          SCONS_CACHE_LIMIT: ${{ inputs.scons-cache-limit }}
          SCONS_ENV: ${{ inputs.scons-env }}
      run: |
        cd godot
        echo "Building with flags:" platform=${{ inputs.platform }} target=${{ inputs.target }} tests=${{ inputs.tests }} ${{ env.SCONSFLAGS }}
        if [ "${{ inputs.target }}" != "editor" ]; then rm -rf editor; fi  # Ensure we don't include editor code.
        export PATH="$PWD/../llvm-mingw/bin:$PATH"
        ${{ input.scons-env }} scons platform=${{ inputs.platform }} target=${{ inputs.target }} tests=${{ inputs.tests }} ${{ env.SCONSFLAGS }}
        ls -l bin/

    # - name: Generate GUT tests
    #   if: ${{ matrix.tests }}
    #   shell: sh
    #   run: |
    #     godot/${{ matrix.bin }} --headless --path . -s res://addons/gut/gut_cmdln.gd --xr-mode off

    # - name: Publish Test Report
    #   uses: mikepenz/action-junit-report@v3
    #   if: ${{ matrix.tests }}
    #   with:
    #     report_paths: '**/vsk_default/test/results/TEST_*.xml'